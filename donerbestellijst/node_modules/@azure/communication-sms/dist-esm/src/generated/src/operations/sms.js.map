{"version":3,"file":"sms.js","sourceRoot":"","sources":["../../../../../src/generated/src/operations/sms.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AAEH,OAAO,EAAE,aAAa,EAAE,MAAM,YAAY,CAAC;AAE3C,OAAO,KAAK,UAAU,MAAM,oBAAoB,CAAC;AACjD,OAAO,KAAK,OAAO,MAAM,mBAAmB,CAAC;AAC7C,OAAO,KAAK,UAAU,MAAM,sBAAsB,CAAC;AAQnD,uCAAuC;AACvC,MAAM,OAAO,OAAO;IAGlB;;;OAGG;IACH,YAAY,MAAoB;QAC9B,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACvB,CAAC;IAED;;;;OAIG;IACH,KAAK,CAAC,IAAI,CACR,kBAAsC,EACtC,OAA+B;QAE/B,OAAO,aAAa,CAAC,QAAQ,CAC3B,mBAAmB,EACnB,OAAO,aAAP,OAAO,cAAP,OAAO,GAAI,EAAE,EACb,KAAK,EAAE,OAAO,EAAE,EAAE;YAChB,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,kBAAkB,EAAE,OAAO,EAAE,EAC/B,iBAAiB,CACmB,CAAC;QACzC,CAAC,CACF,CAAC;IACJ,CAAC;CACF;AACD,2BAA2B;AAC3B,MAAM,UAAU,GAAG,UAAU,CAAC,gBAAgB,CAAC,OAAO,EAAE,WAAW,CAAC,KAAK,CAAC,CAAC;AAE3E,MAAM,iBAAiB,GAA6B;IAClD,IAAI,EAAE,MAAM;IACZ,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,eAAe;SACpC;KACF;IACD,WAAW,EAAE,UAAU,CAAC,kBAAkB;IAC1C,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE,CAAC,UAAU,CAAC,QAAQ,CAAC;IACpC,gBAAgB,EAAE,CAAC,UAAU,CAAC,WAAW,EAAE,UAAU,CAAC,MAAM,CAAC;IAC7D,SAAS,EAAE,MAAM;IACjB,UAAU;CACX,CAAC","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { tracingClient } from \"../tracing\";\nimport { Sms } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SmsApiClient } from \"../smsApiClient\";\nimport {\n  SendMessageRequest,\n  SmsSendOptionalParams,\n  SmsSendOperationResponse\n} from \"../models\";\n\n/** Class containing Sms operations. */\nexport class SmsImpl implements Sms {\n  private readonly client: SmsApiClient;\n\n  /**\n   * Initialize a new instance of the class Sms class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SmsApiClient) {\n    this.client = client;\n  }\n\n  /**\n   * Sends a SMS message from a phone number that belongs to the authenticated account.\n   * @param sendMessageRequest Represents the body of the send message request.\n   * @param options The options parameters.\n   */\n  async send(\n    sendMessageRequest: SendMessageRequest,\n    options?: SmsSendOptionalParams\n  ): Promise<SmsSendOperationResponse> {\n    return tracingClient.withSpan(\n      \"SmsApiClient.send\",\n      options ?? {},\n      async (options) => {\n        return this.client.sendOperationRequest(\n          { sendMessageRequest, options },\n          sendOperationSpec\n        ) as Promise<SmsSendOperationResponse>;\n      }\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst sendOperationSpec: coreClient.OperationSpec = {\n  path: \"/sms\",\n  httpMethod: \"POST\",\n  responses: {\n    202: {\n      bodyMapper: Mappers.SmsSendResponse\n    }\n  },\n  requestBody: Parameters.sendMessageRequest,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer\n};\n"]}